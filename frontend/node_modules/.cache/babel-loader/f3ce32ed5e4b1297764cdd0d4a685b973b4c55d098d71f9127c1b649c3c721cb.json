{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADM1\\\\Documents\\\\GitHub\\\\ChatBackProject\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport OpenAIApi from \"openai\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const openai = new OpenAIApi({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n    // Carrega a chave do ambiente\n    dangerouslyAllowBrowser: true,\n    baseURL: \"https://api.openai.com/v1\" // Use este endpoint\n  });\n  async function askChatGPT(e) {\n    e.preventDefault();\n    let prompt = input;\n    let arquivo = 0;\n    console.log(\"prompt\", prompt);\n    // console.log(\"arquivo\", formData);\n\n    if (file != null) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      try {\n        // const file = await openai.files.create({\n        //   file: fs.createReadStream(req.file.path),\n        //   purpose: \"assistants\", // ou \"fine-tune\", dependendo do uso\n        // });\n        console.log('formData', formData);\n        const res = await fetch(\"http://localhost:8080/upload\", {\n          method: \"POST\",\n          body: formData\n        });\n        const data = await res.json();\n        console.log('data', data);\n        console.log(\"File ID:\", data.fileId);\n        arquivo = data.fileId;\n        // return data.fileId;\n      } catch (error) {\n        console.log(\"erro ao enviar arquivo\", error);\n      }\n    }\n    setLoading(true);\n    try {\n      const response = await openai.chat.completions.create({\n        model: \"gpt-4o\",\n        // Ou \"gpt-3.5-turbo\"\n        messages: [{\n          role: \"system\",\n          content: \"Você é um assistente útil.\"\n        }, {\n          role: \"user\",\n          content: [{\n            type: \"text\",\n            text: prompt\n          }\n          // { type: \"file\", file_id: arquivo },\n          ]\n        }],\n        store: true,\n        // stream: true,\n        stream: false,\n        temperature: 0.7,\n        // Controle de criatividade (0 a 1)\n        max_tokens: 150 // Máximo de palavras na resposta\n      });\n      console.log(\"response\", response);\n\n      // return response.data.choices[0].message.content;\n\n      console.log(\"first\", response.choices[0].message.content);\n      setResponse(response.choices[0].message.content);\n    } catch (error) {\n      console.error(\"Erro ao acessar a API:\", error);\n      // return \"Ocorreu um erro ao processar sua solicitação.\";\n      setResponse(\"Ocorreu um erro ao processar sua solicitação.\");\n    }\n    setLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-plan\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: response || \"Olá faça uma pergunta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: askChatGPT,\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"border p-2 w-full rounded\",\n          placeholder: \"Digite sua pergunta...\",\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"mt-2 bg-blue-500 text-white px-4 py-2 rounded\",\n          disabled: loading,\n          children: loading ? \"Carregando...\" : \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"border p-2 w-full rounded\"\n          // placeholder=\"Digite sua pergunta...\"\n          ,\n          value: file,\n          onChange: e => setFile(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZznhHpUj8K0r0kWHQJPBZlnc0GI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["OpenAIApi","useState","jsxDEV","_jsxDEV","App","_s","input","setInput","file","setFile","response","setResponse","loading","setLoading","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","baseURL","askChatGPT","e","preventDefault","prompt","arquivo","console","log","formData","FormData","append","res","fetch","method","body","data","json","fileId","error","chat","completions","create","model","messages","role","content","type","text","store","stream","temperature","max_tokens","choices","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ADM1/Documents/GitHub/ChatBackProject/frontend/src/App.js"],"sourcesContent":["import \"./App.css\";\r\nimport OpenAIApi from \"openai\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [response, setResponse] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const openai = new OpenAIApi({\r\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY, // Carrega a chave do ambiente\r\n    dangerouslyAllowBrowser: true,\r\n    baseURL: \"https://api.openai.com/v1\", // Use este endpoint\r\n  });\r\n\r\n  async function askChatGPT(e) {\r\n    e.preventDefault();\r\n    let prompt = input;\r\n    let arquivo = 0;\r\n\r\n    console.log(\"prompt\", prompt);\r\n    // console.log(\"arquivo\", formData);\r\n\r\n    if (file != null) {\r\n \r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n\r\n      try {\r\n        // const file = await openai.files.create({\r\n        //   file: fs.createReadStream(req.file.path),\r\n        //   purpose: \"assistants\", // ou \"fine-tune\", dependendo do uso\r\n        // });\r\n        console.log('formData', formData)\r\n        const res = await fetch(\"http://localhost:8080/upload\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n      \r\n        const data = await res.json();\r\n        console.log('data', data)\r\n        console.log(\"File ID:\", data.fileId);\r\n        arquivo = data.fileId;\r\n        // return data.fileId;\r\n\r\n      } catch (error) {\r\n        console.log(\"erro ao enviar arquivo\", error);\r\n      }\r\n    }\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await openai.chat.completions.create({\r\n        model: \"gpt-4o\", // Ou \"gpt-3.5-turbo\"\r\n        messages: [\r\n          { role: \"system\", content: \"Você é um assistente útil.\" },\r\n          {\r\n            role: \"user\",\r\n            content: [\r\n              { type: \"text\", text: prompt },\r\n              // { type: \"file\", file_id: arquivo },\r\n            ],\r\n          },\r\n        ],\r\n        store: true,\r\n        // stream: true,\r\n        stream: false,\r\n        temperature: 0.7, // Controle de criatividade (0 a 1)\r\n        max_tokens: 150, // Máximo de palavras na resposta\r\n      });\r\n      console.log(\"response\", response);\r\n\r\n      // return response.data.choices[0].message.content;\r\n\r\n      console.log(\"first\", response.choices[0].message.content);\r\n\r\n      setResponse(response.choices[0].message.content);\r\n    } catch (error) {\r\n      console.error(\"Erro ao acessar a API:\", error);\r\n      // return \"Ocorreu um erro ao processar sua solicitação.\";\r\n      setResponse(\"Ocorreu um erro ao processar sua solicitação.\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"text-plan\">\r\n          <p>{response || \"Olá faça uma pergunta\"}</p>\r\n        </div>\r\n\r\n        <form onSubmit={askChatGPT} className=\"mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"border p-2 w-full rounded\"\r\n            placeholder=\"Digite sua pergunta...\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"mt-2 bg-blue-500 text-white px-4 py-2 rounded\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"Carregando...\" : \"Enviar\"}\r\n          </button>\r\n          <input\r\n            type=\"file\"\r\n            className=\"border p-2 w-full rounded\"\r\n            // placeholder=\"Digite sua pergunta...\"\r\n            value={file}\r\n            onChange={(e) => setFile(e.target.value)}\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}